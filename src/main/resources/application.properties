spring.application.name=Fashion

#Configure Datasource
spring.datasource.url=jdbc:postgresql://localhost:5432/fashion
spring.datasource.username=postgres
spring.datasource.password=password

# Hibernate settings
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# JWT Settings
# IMPORTANT: Use a strong, long, random secret key in a real application.
# For HS512, the key should ideally be 64 bytes (512 bits).
# Generate one using a secure random generator.
# Example (DO NOT USE THIS IN PRODUCTION, GENERATE YOUR OWN):
jwt.secret=YourVeryLongAndStrongAndRandomSecretKeyForHS512AlgorithmFashionProjectExampleKey12345
# JWT Expiration time in milliseconds 3600000 equals 1 hour
jwt.expiration.ms=3600000

spring.cache.cache-names=products,productsList
# Cache up to 500 products, expire after 1 hour of inactivity
spring.cache.caffeine.spec.products=maximumSize=500,expireAfterAccess=3600s
# Cache up to 100 product lists, expire after 10 minutes
spring.cache.caffeine.spec.productsList=maximumSize=100,expireAfterWrite=600s

#Checking caching performance
management.endpoints.web.exposure.include=caches,metrics
management.endpoint.caches.enabled=true
management.endpoint.metrics.enabled=true
